{"id":2069120,"slug":"kh5fyv","title":"UIRecorder3.0-技术细则","book_id":187563,"book":{"id":187563,"type":"Book","slug":"uirecorder","name":"UIRecorder","user_id":296279,"description":"一端录制，多端使用的便捷 UI 自动化测试工具","creator_id":94302,"public":1,"items_count":22,"likes_count":0,"watches_count":12,"content_updated_at":"2019-10-11T06:31:45.205Z","updated_at":"2019-10-11T06:31:45.000Z","created_at":"2018-12-11T06:11:00.000Z","namespace":"artist/uirecorder","user":{"id":296279,"type":"Group","login":"artist","name":"F&D艺术家-前端自动化测试","description":"探索与推广前端自动化测试","avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150693943-avatar/c80e9798-27e4-4238-8760-4bb5828a7228.png","large_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150693943-avatar/c80e9798-27e4-4238-8760-4bb5828a7228.png?x-oss-process=image/resize,m_fill,w_320,h_320","medium_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150693943-avatar/c80e9798-27e4-4238-8760-4bb5828a7228.png?x-oss-process=image/resize,m_fill,w_160,h_160","small_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150693943-avatar/c80e9798-27e4-4238-8760-4bb5828a7228.png?x-oss-process=image/resize,m_fill,w_80,h_80","books_count":4,"public_books_count":4,"followers_count":0,"following_count":0,"created_at":"2019-03-21T06:44:55.000Z","updated_at":"2019-08-08T02:30:37.000Z","_serializer":"v2.user"},"_serializer":"v2.book"},"user_id":94302,"creator":{"id":94302,"type":"User","login":"linshuoting","name":"说听(Stngle)","description":"F&D艺术家   \nhttps://github.com/Stngle","avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150368242-avatar/4fa5a6cc-1636-43cd-b085-fce8ad30be09.png","large_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150368242-avatar/4fa5a6cc-1636-43cd-b085-fce8ad30be09.png?x-oss-process=image/resize,m_fill,w_320,h_320","medium_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150368242-avatar/4fa5a6cc-1636-43cd-b085-fce8ad30be09.png?x-oss-process=image/resize,m_fill,w_160,h_160","small_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150368242-avatar/4fa5a6cc-1636-43cd-b085-fce8ad30be09.png?x-oss-process=image/resize,m_fill,w_80,h_80","books_count":2,"public_books_count":1,"followers_count":8,"following_count":6,"created_at":"2018-03-21T12:59:06.000Z","updated_at":"2019-10-09T08:37:02.000Z","_serializer":"v2.user"},"format":"lake","body":"","body_draft":"","body_html":"<h2 id=\"vtQmM\">一、 Mocha技术栈升级</h2><h3 id=\"2kXeJ\">1.1 Mocha@3.x -&gt; Mocha@5.x</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2019/png/94302/1562638378425-97f2a1c2-98aa-4d09-b56b-1f9d981dffcd.png#align=left&amp;display=inline&amp;height=117&amp;originHeight=326&amp;originWidth=2086&amp;size=0&amp;status=done&amp;width=746\" style=\"max-width: 600px; width: 746px;\" /></p><ul><li>Mocha 在回归测试过程中的定位为 Runner，升级版本 3.x -&gt; 5.x 后，数据快照并无较大差异， <code>stat</code> 、 <code>suites</code> 、 <code>tests</code> 等主要数据对象结构可以直接兼容。</li></ul><p><br /></p><h2 id=\"bT8je\">二、Reporter接入</h2><h3 id=\"au1H8\">2.1 视图渲染拓展</h3><ul><li>Mocha 用例语法模版（其中 <code>describe</code> 对应 case， <code>it</code> 对应测试步骤）：</li></ul><p><br /></p><pre data-lang=\"javascript\"><code>describe('description of case', function() {\n\tit('description of test step', async function() {\n  \tawait driver.url(_('http://taobao.com'))\n  })\n})</code></pre><p><br /></p><ul><li>生成数据快照：</li></ul><pre data-lang=\"json\"><code>&quot;suites&quot;: [\n      {\n        &quot;title&quot;: &quot;description of case&quot;,\n        &quot;ctx&quot;: {\n        \t&quot;test&quot;: {\n            &quot;title&quot;: &quot;description of test step&quot;,\n            ...\n        }\n        ...\n      }\n      ... \n]</code></pre><p><br /></p><ul><li>拓展功能：原有 <code>macaca-reporter</code> 渲染功能仅支持 <code>suites</code> 对象，本次功能拓展渲染粒度细化到 <code>test</code> 对象。</li></ul><p><br /></p><h3 id=\"ltD6m\">2.2 截图处理</h3><ul><li>实现方案：在 Mocha 测试用例提供的钩子 <code>afterEach()</code> 中（即每个测试步骤运行后，对当前视图进行截图），按指定规则保存在固定路径。</li></ul><pre data-lang=\"json\"><code>afterEach(async function(){\n  // 省略部分代码\n  let filepath = self.screenshotPath + '/' + self.caseName + '_' + self.stepId;\n  let driver = self.driver;\n  await driver.getScreenshot(filepath + '.png');\n  // 本次改动：将图片路径加入 ctx\n  appendToContext(self, filepath + '.png');\n});</code></pre><ul><li>图片展示：</li></ul><ul data-lake-indent=\"1\"><li>原有方案： <code>mochawesome-uirecorder</code> 也按指定规则写死图片路径，进行展示</li><li>现有方案：将图片展示路径写入 <code>ctx</code> 对象中， <code>macaca-reporter</code> 读取图片路径进行展示（更加合理，可灵活配置）</li></ul><p style=\"padding-left: 2em;\"><br /></p><h2 id=\"DGCUi\">三、mocha-parallel-tests 优化</h2><h3 id=\"PWiTW\">3.1 json 序列化</h3><h4 id=\"LRwFP\">3.1.1 报错日志</h4><ul><li><code>mocha-parallel-tests</code> 有 1.x 升级至 2.x 版本后，运行报错如下：</li></ul><p><br /></p><pre data-lang=\"json\"><code> sample/test.spec : chrome\n      url\n        ✓ url: http://www.baidu.com (823ms)\n      wait body\n(node:3857) UnhandledPromiseRejectionWarning: RangeError: Maximum call stack size exceeded\n    at RegExp.test (&lt;anonymous&gt;)\n    at PromiseClass.wrapFunction [as toJSON] (/Users/linshuoting/Documents/dev/openSource/uirecorder_update/mocha5/node_modules/_promiseclass@1.0.3@promiseclass/lib/promiseclass.js:56:72)\n    at JSON.stringify (&lt;anonymous&gt;)\n    at Object.stringify (/Users/linshuoting/Documents/dev/openSource/uirecorder_update/mocha5/node_modules/_circular-json@0.5.9@circular-json/build/circular-json.node.js:189:32)\n    at Reporter.notifyParentThroughIPC (/Users/linshuoting/Documents/dev/openSource/uirecorder_update/mocha5/node_modules/_mocha-parallel-tests@2.2.0@mocha-parallel-tests/dist/subprocess/reporter.js:143:43)\n    at Reporter.notifyParent (/Users/linshuoting/Documents/dev/openSource/uirecorder_update/mocha5/node_modules/_mocha-parallel-tests@2.2.0@mocha-parallel-tests/dist/subprocess/reporter.js:123:22)\n    at Runner.Reporter.onRunnerPass (/Users/linshuoting/Documents/dev/openSource/uirecorder_update/mocha5/node_modules/_mocha-parallel-tests@2.2.0@mocha-parallel-tests/dist/subprocess/reporter.js:73:22)\n    at emitOne (events.js:116:13)\n    at Runner.emit (events.js:211:7)\n    at /Users/linshuoting/Documents/dev/openSource/uirecorder_update/mocha5/node_modules/_mocha@5.2.0@mocha/lib/runner.js:603:14\n(node:3857) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)\n(node:3857) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.</code></pre><p><br /></p><h4 id=\"ObooQ\">3.1.2 问题分析</h4><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/94302/1562638378353-7926db22-a74c-4e0a-bbb8-513a0e545332.png#align=left&amp;display=inline&amp;height=58&amp;name=image.png&amp;originHeight=116&amp;originWidth=721&amp;size=14261&amp;status=done&amp;width=360.5\" style=\"max-width: 600px; width: 360.5px;\" /></p><ul><li>单测试用例运行流程：测试用例通过 mocha 执行，返回执行结果到 reporter，reporter 可以将执行结果进行自定义渲染。（<strong>可以正常运行的情况</strong>）</li></ul><ul data-lake-indent=\"1\"><li>test case：ui测试用例</li><li>mocha：自动化测试执行库，运行测试用例，返回执行结果（object）</li><li>reporter：获取 mocha 执行结果，自定义渲染</li></ul><p style=\"padding-left: 2em;\"><br /></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/94302/1562638378356-b64bf6b9-b47c-4b0d-96e4-83bc6a9dbd38.png#align=left&amp;display=inline&amp;height=164&amp;name=image.png&amp;originHeight=327&amp;originWidth=838&amp;size=37160&amp;status=done&amp;width=419\" style=\"max-width: 600px; width: 419px;\" /></p><ul><li>多测试用例运行流程：多个测试用例通过 mocha-parallel-tests 并行运行（<strong>子进程</strong>），运行结果（object）通过 ipc 的形式发送给 <strong>主进程 。</strong>主进程将各子进程的 object 进行合并，返回结果给 reporter 进行自定义渲染（<strong>运行过程出现问题</strong>）。</li></ul><ul data-lake-indent=\"1\"><li>引入 json stringify 原因：不同进程间通信无法直接传递 object， <code>mocha-parallel-tests</code>  现有的方式是将子进程的 object 进行 json stringify 发送给主进程，主进程将进行 json parse 后，再各个子进程的 object 进行合并（Object），最后将 Object 返回给 reporter。子进程的 object 存在 circular json 问题， <code>mocha-parallel-tests</code>  现有的方案是引入 <code>circular-json</code> 第三方包解决，执行过程出现了如上的报错日志。</li><li>Maximum call stack size exceeded 报错分析：部分测试用例步骤返回的 object 会特别大，比如 <code>.wait()</code> api，测试用例代码如下：</li></ul><p style=\"padding-left: 2em;\"><br /></p><pre><code>describe('wait body', function () {\n  it('waitBody: ', async function(){\n    await driver.sleep(500).wait('body', 30000).html().then(function(code){\n    isPageError(code).should.be.false;\n    });\n  });\n});</code></pre><p> 返回结果包含 html 页面相关 DOM 节点，因此 object 会特别大。object 例子如下：</p><pre><code>PromiseClass {\n  _browser: \n   PromiseClass {\n     _driver: PromiseClass { config: [Object], lastBrowser: [Circular] },\n     browserName: 'chrome',\n     version: '74.0.3729.169',\n     platform: 'Mac OS X',\n     sessionId: 'efc3c64e3feceb2b9586c4a8048185ee',\n     capabilities: \n      { acceptInsecureCerts: false,\n        acceptSslCerts: false,\n        applicationCacheEnabled: false,\n        browserConnectionEnabled: false,\n        browserName: 'chrome',\n        chrome: [Object],\n        cssSelectorsEnabled: true,\n        databaseEnabled: false,\n        'goog:chromeOptions': [Object],\n        handlesAlerts: true,\n        hasTouchScreen: false,\n        javascriptEnabled: true,\n        locationContextEnabled: true,\n        mobileEmulationEnabled: false,\n        nativeEvents: true,\n        networkConnectionEnabled: false,\n        pageLoadStrategy: 'normal',\n        platform: 'Mac OS X',\n        rotatable: false,\n        setWindowRect: true,\n        takesHeapSnapshot: true,\n        takesScreenshot: true,\n        unexpectedAlertBehaviour: '',\n        version: '74.0.3729.169',\n        webStorageEnabled: true,\n        'webdriver.remote.sessionid': 'efc3c64e3feceb2b9586c4a8048185ee' },\n     browserMode: true,\n     mobileMode: false,\n     _windowHandle: 'CDwindow-3D66C092F03357318BF442780801EE16' },\n  using: 'css selector',\n  value: 'body',\n  MouseButtons: { LEFT: 0, MIDDLE: 1, RIGHT: 2 },\n  Keys: \n   { NULL: '',\n     CANCEL: '',\n     HELP: '',\n     BACK_SPACE: '',\n     TAB: '',\n     CLEAR: '',\n     RETURN: '',\n     ENTER: '',\n     SHIFT: '',\n     CONTROL: '',\n     CTRL: '',\n     ALT: '',\n     PAUSE: '',\n     ESCAPE: '',\n     SPACE: '',\n     PAGE_UP: '',\n     PAGE_DOWN: '',\n     END: '',\n     HOME: '',\n     ARROW_LEFT: '',\n     LEFT: '',\n     ARROW_UP: '',\n     UP: '',\n     ARROW_RIGHT: '',\n     RIGHT: '',\n     ARROW_DOWN: '',\n     DOWN: '',\n     INSERT: '',\n     DELETE: '',\n     SEMICOLON: '',\n     EQUALS: '',\n     NUMPAD0: '',\n     NUMPAD1: '',\n     NUMPAD2: '',\n     NUMPAD3: '',\n     NUMPAD4: '',\n     NUMPAD5: '',\n     NUMPAD6: '',\n     NUMPAD7: '',\n     NUMPAD8: '',\n     NUMPAD9: '',\n     MULTIPLY: '',\n     ADD: '',\n     SEPARATOR: '',\n     SUBTRACT: '',\n     DECIMAL: '',\n     DIVIDE: '',\n     F1: '',\n     F2: '',\n     F3: '',\n     F4: '',\n     F5: '',\n     F6: '',\n     F7: '',\n     F8: '',\n     F9: '',\n     F10: '',\n     F11: '',\n     F12: '',\n     COMMAND: '',\n     META: '' },\n  elementIds: [ '0.16128187706588837-1' ],\n  length: 1 }</code></pre><p><br /></p><h4 id=\"ALjSc\">3.1.3 解决方案</h4><ul><li>压缩 object：</li></ul><ul data-lake-indent=\"1\"><li>mocha 运行结果只取最后断言结果：mocha 运行过程中返回的 object 是执行过程中不断更新的，不是一个步骤完成后，将断言结果合并到 object。</li><li>object 提取部分重要属性返回：可能后续功能拓展需要提取更多数据。</li></ul><ul><li>优化 json stringify：</li></ul><ul data-lake-indent=\"1\"><li> <code>safe-json-stringify</code> 可以执行完成，但返回的 object 不够完整，reporter 渲染无法拿到相关数据。</li><li>fork <code>circular-json</code> ，提出 promise object 。☑️采取方案</li></ul><p><br /></p><h3 id=\"mONYj\">3.2 视图渲染拓展</h3><ul><li>对 <code>suites</code> 数组渲染进行兼容。（单个测试用例是一个 <code>suites</code> 对象）</li></ul>","body_lake":"<!doctype lake><h2 id=\"vtQmM\">一、 Mocha技术栈升级</h2><h3 id=\"2kXeJ\">1.1 Mocha@3.x -&gt; Mocha@5.x</h3><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F94302%2F1562638378425-97f2a1c2-98aa-4d09-b56b-1f9d981dffcd.png%22%2C%22originWidth%22%3A2086%2C%22originHeight%22%3A326%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A746%2C%22height%22%3A117%7D\"></card><cursor /></p><ul><li>Mocha 在回归测试过程中的定位为 Runner，升级版本 3.x -&gt; 5.x 后，数据快照并无较大差异， <code>stat</code> 、 <code>suites</code> 、 <code>tests</code> 等主要数据对象结构可以直接兼容。</li></ul><p><br /></p><h2 id=\"bT8je\">二、Reporter接入</h2><h3 id=\"au1H8\">2.1 视图渲染拓展</h3><ul><li>Mocha 用例语法模版（其中 <code>describe</code> 对应 case， <code>it</code> 对应测试步骤）：</li></ul><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22describe('description%20of%20case'%2C%20function()%20%7B%5Cn%5Ctit('description%20of%20test%20step'%2C%20async%20function()%20%7B%5Cn%20%20%5Ctawait%20driver.url(_('http%3A%2F%2Ftaobao.com'))%5Cn%20%20%7D)%5Cn%7D)%22%2C%22id%22%3A%22ufENb%22%7D\"></card><p><br /></p><ul><li>生成数据快照：</li></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%5C%22suites%5C%22%3A%20%5B%5Cn%20%20%20%20%20%20%7B%5Cn%20%20%20%20%20%20%20%20%5C%22title%5C%22%3A%20%5C%22description%20of%20case%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%5C%22ctx%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%5Ct%5C%22test%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%22title%5C%22%3A%20%5C%22description%20of%20test%20step%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20...%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20...%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20...%20%5Cn%5D%22%2C%22id%22%3A%22CPGCQ%22%7D\"></card><p><br /></p><ul><li>拓展功能：原有 <code>macaca-reporter</code> 渲染功能仅支持 <code>suites</code> 对象，本次功能拓展渲染粒度细化到 <code>test</code> 对象。</li></ul><p><br /></p><h3 id=\"ltD6m\">2.2 截图处理</h3><ul><li>实现方案：在 Mocha 测试用例提供的钩子 <code>afterEach()</code> 中（即每个测试步骤运行后，对当前视图进行截图），按指定规则保存在固定路径。</li></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22afterEach(async%20function()%7B%5Cn%20%20%2F%2F%20%E7%9C%81%E7%95%A5%E9%83%A8%E5%88%86%E4%BB%A3%E7%A0%81%5Cn%20%20let%20filepath%20%3D%20self.screenshotPath%20%2B%20'%2F'%20%2B%20self.caseName%20%2B%20'_'%20%2B%20self.stepId%3B%5Cn%20%20let%20driver%20%3D%20self.driver%3B%5Cn%20%20await%20driver.getScreenshot(filepath%20%2B%20'.png')%3B%5Cn%20%20%2F%2F%20%E6%9C%AC%E6%AC%A1%E6%94%B9%E5%8A%A8%EF%BC%9A%E5%B0%86%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%E5%8A%A0%E5%85%A5%20ctx%5Cn%20%20appendToContext(self%2C%20filepath%20%2B%20'.png')%3B%5Cn%7D)%3B%22%2C%22id%22%3A%224797T%22%7D\"></card><ul><li>图片展示：</li></ul><ul data-lake-indent=\"1\"><li>原有方案： <code>mochawesome-uirecorder</code> 也按指定规则写死图片路径，进行展示</li><li>现有方案：将图片展示路径写入 <code>ctx</code> 对象中， <code>macaca-reporter</code> 读取图片路径进行展示（更加合理，可灵活配置）</li></ul><p style=\"padding-left: 2em;\"><br /></p><h2 id=\"DGCUi\">三、mocha-parallel-tests 优化</h2><h3 id=\"PWiTW\">3.1 json 序列化</h3><h4 id=\"LRwFP\">3.1.1 报错日志</h4><ul><li><code>mocha-parallel-tests</code> 有 1.x 升级至 2.x 版本后，运行报错如下：</li></ul><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%20sample%2Ftest.spec%20%3A%20chrome%5Cn%20%20%20%20%20%20url%5Cn%20%20%20%20%20%20%20%20%E2%9C%93%20url%3A%20http%3A%2F%2Fwww.baidu.com%20(823ms)%5Cn%20%20%20%20%20%20wait%20body%5Cn(node%3A3857)%20UnhandledPromiseRejectionWarning%3A%20RangeError%3A%20Maximum%20call%20stack%20size%20exceeded%5Cn%20%20%20%20at%20RegExp.test%20(%3Canonymous%3E)%5Cn%20%20%20%20at%20PromiseClass.wrapFunction%20%5Bas%20toJSON%5D%20(%2FUsers%2Flinshuoting%2FDocuments%2Fdev%2FopenSource%2Fuirecorder_update%2Fmocha5%2Fnode_modules%2F_promiseclass%401.0.3%40promiseclass%2Flib%2Fpromiseclass.js%3A56%3A72)%5Cn%20%20%20%20at%20JSON.stringify%20(%3Canonymous%3E)%5Cn%20%20%20%20at%20Object.stringify%20(%2FUsers%2Flinshuoting%2FDocuments%2Fdev%2FopenSource%2Fuirecorder_update%2Fmocha5%2Fnode_modules%2F_circular-json%400.5.9%40circular-json%2Fbuild%2Fcircular-json.node.js%3A189%3A32)%5Cn%20%20%20%20at%20Reporter.notifyParentThroughIPC%20(%2FUsers%2Flinshuoting%2FDocuments%2Fdev%2FopenSource%2Fuirecorder_update%2Fmocha5%2Fnode_modules%2F_mocha-parallel-tests%402.2.0%40mocha-parallel-tests%2Fdist%2Fsubprocess%2Freporter.js%3A143%3A43)%5Cn%20%20%20%20at%20Reporter.notifyParent%20(%2FUsers%2Flinshuoting%2FDocuments%2Fdev%2FopenSource%2Fuirecorder_update%2Fmocha5%2Fnode_modules%2F_mocha-parallel-tests%402.2.0%40mocha-parallel-tests%2Fdist%2Fsubprocess%2Freporter.js%3A123%3A22)%5Cn%20%20%20%20at%20Runner.Reporter.onRunnerPass%20(%2FUsers%2Flinshuoting%2FDocuments%2Fdev%2FopenSource%2Fuirecorder_update%2Fmocha5%2Fnode_modules%2F_mocha-parallel-tests%402.2.0%40mocha-parallel-tests%2Fdist%2Fsubprocess%2Freporter.js%3A73%3A22)%5Cn%20%20%20%20at%20emitOne%20(events.js%3A116%3A13)%5Cn%20%20%20%20at%20Runner.emit%20(events.js%3A211%3A7)%5Cn%20%20%20%20at%20%2FUsers%2Flinshuoting%2FDocuments%2Fdev%2FopenSource%2Fuirecorder_update%2Fmocha5%2Fnode_modules%2F_mocha%405.2.0%40mocha%2Flib%2Frunner.js%3A603%3A14%5Cn(node%3A3857)%20UnhandledPromiseRejectionWarning%3A%20Unhandled%20promise%20rejection.%20This%20error%20originated%20either%20by%20throwing%20inside%20of%20an%20async%20function%20without%20a%20catch%20block%2C%20or%20by%20rejecting%20a%20promise%20which%20was%20not%20handled%20with%20.catch().%20(rejection%20id%3A%201)%5Cn(node%3A3857)%20%5BDEP0018%5D%20DeprecationWarning%3A%20Unhandled%20promise%20rejections%20are%20deprecated.%20In%20the%20future%2C%20promise%20rejections%20that%20are%20not%20handled%20will%20terminate%20the%20Node.js%20process%20with%20a%20non-zero%20exit%20code.%22%2C%22id%22%3A%221IrEW%22%7D\"></card><p><br /></p><h4 id=\"ObooQ\">3.1.2 问题分析</h4><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F94302%2F1562638378353-7926db22-a74c-4e0a-bbb8-513a0e545332.png%22%2C%22originWidth%22%3A721%2C%22originHeight%22%3A116%2C%22name%22%3A%22image.png%22%2C%22size%22%3A14261%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A360.5%2C%22height%22%3A58%7D\"></card></p><ul><li>单测试用例运行流程：测试用例通过 mocha 执行，返回执行结果到 reporter，reporter 可以将执行结果进行自定义渲染。（<strong>可以正常运行的情况</strong>）</li></ul><ul data-lake-indent=\"1\"><li>test case：ui测试用例</li><li>mocha：自动化测试执行库，运行测试用例，返回执行结果（object）</li><li>reporter：获取 mocha 执行结果，自定义渲染</li></ul><p style=\"padding-left: 2em;\"><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F94302%2F1562638378356-b64bf6b9-b47c-4b0d-96e4-83bc6a9dbd38.png%22%2C%22originWidth%22%3A838%2C%22originHeight%22%3A327%2C%22name%22%3A%22image.png%22%2C%22size%22%3A37160%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A419%2C%22height%22%3A164%7D\"></card></p><ul><li>多测试用例运行流程：多个测试用例通过 mocha-parallel-tests 并行运行（<strong>子进程</strong>），运行结果（object）通过 ipc 的形式发送给 <strong>主进程 。</strong>主进程将各子进程的 object 进行合并，返回结果给 reporter 进行自定义渲染（<strong>运行过程出现问题</strong>）。</li></ul><ul data-lake-indent=\"1\"><li>引入 json stringify 原因：不同进程间通信无法直接传递 object， <code>mocha-parallel-tests</code>  现有的方式是将子进程的 object 进行 json stringify 发送给主进程，主进程将进行 json parse 后，再各个子进程的 object 进行合并（Object），最后将 Object 返回给 reporter。子进程的 object 存在 circular json 问题， <code>mocha-parallel-tests</code>  现有的方案是引入 <code>circular-json</code> 第三方包解决，执行过程出现了如上的报错日志。</li><li>Maximum call stack size exceeded 报错分析：部分测试用例步骤返回的 object 会特别大，比如 <code>.wait()</code> api，测试用例代码如下：</li></ul><p style=\"padding-left: 2em;\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22describe('wait%20body'%2C%20function%20()%20%7B%5Cn%20%20it('waitBody%3A%20'%2C%20async%20function()%7B%5Cn%20%20%20%20await%20driver.sleep(500).wait('body'%2C%2030000).html().then(function(code)%7B%5Cn%20%20%20%20isPageError(code).should.be.false%3B%5Cn%20%20%20%20%7D)%3B%5Cn%20%20%7D)%3B%5Cn%7D)%3B%22%2C%22id%22%3A%22tZQjr%22%7D\"></card><p> 返回结果包含 html 页面相关 DOM 节点，因此 object 会特别大。object 例子如下：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22PromiseClass%20%7B%5Cn%20%20_browser%3A%20%5Cn%20%20%20PromiseClass%20%7B%5Cn%20%20%20%20%20_driver%3A%20PromiseClass%20%7B%20config%3A%20%5BObject%5D%2C%20lastBrowser%3A%20%5BCircular%5D%20%7D%2C%5Cn%20%20%20%20%20browserName%3A%20'chrome'%2C%5Cn%20%20%20%20%20version%3A%20'74.0.3729.169'%2C%5Cn%20%20%20%20%20platform%3A%20'Mac%20OS%20X'%2C%5Cn%20%20%20%20%20sessionId%3A%20'efc3c64e3feceb2b9586c4a8048185ee'%2C%5Cn%20%20%20%20%20capabilities%3A%20%5Cn%20%20%20%20%20%20%7B%20acceptInsecureCerts%3A%20false%2C%5Cn%20%20%20%20%20%20%20%20acceptSslCerts%3A%20false%2C%5Cn%20%20%20%20%20%20%20%20applicationCacheEnabled%3A%20false%2C%5Cn%20%20%20%20%20%20%20%20browserConnectionEnabled%3A%20false%2C%5Cn%20%20%20%20%20%20%20%20browserName%3A%20'chrome'%2C%5Cn%20%20%20%20%20%20%20%20chrome%3A%20%5BObject%5D%2C%5Cn%20%20%20%20%20%20%20%20cssSelectorsEnabled%3A%20true%2C%5Cn%20%20%20%20%20%20%20%20databaseEnabled%3A%20false%2C%5Cn%20%20%20%20%20%20%20%20'goog%3AchromeOptions'%3A%20%5BObject%5D%2C%5Cn%20%20%20%20%20%20%20%20handlesAlerts%3A%20true%2C%5Cn%20%20%20%20%20%20%20%20hasTouchScreen%3A%20false%2C%5Cn%20%20%20%20%20%20%20%20javascriptEnabled%3A%20true%2C%5Cn%20%20%20%20%20%20%20%20locationContextEnabled%3A%20true%2C%5Cn%20%20%20%20%20%20%20%20mobileEmulationEnabled%3A%20false%2C%5Cn%20%20%20%20%20%20%20%20nativeEvents%3A%20true%2C%5Cn%20%20%20%20%20%20%20%20networkConnectionEnabled%3A%20false%2C%5Cn%20%20%20%20%20%20%20%20pageLoadStrategy%3A%20'normal'%2C%5Cn%20%20%20%20%20%20%20%20platform%3A%20'Mac%20OS%20X'%2C%5Cn%20%20%20%20%20%20%20%20rotatable%3A%20false%2C%5Cn%20%20%20%20%20%20%20%20setWindowRect%3A%20true%2C%5Cn%20%20%20%20%20%20%20%20takesHeapSnapshot%3A%20true%2C%5Cn%20%20%20%20%20%20%20%20takesScreenshot%3A%20true%2C%5Cn%20%20%20%20%20%20%20%20unexpectedAlertBehaviour%3A%20''%2C%5Cn%20%20%20%20%20%20%20%20version%3A%20'74.0.3729.169'%2C%5Cn%20%20%20%20%20%20%20%20webStorageEnabled%3A%20true%2C%5Cn%20%20%20%20%20%20%20%20'webdriver.remote.sessionid'%3A%20'efc3c64e3feceb2b9586c4a8048185ee'%20%7D%2C%5Cn%20%20%20%20%20browserMode%3A%20true%2C%5Cn%20%20%20%20%20mobileMode%3A%20false%2C%5Cn%20%20%20%20%20_windowHandle%3A%20'CDwindow-3D66C092F03357318BF442780801EE16'%20%7D%2C%5Cn%20%20using%3A%20'css%20selector'%2C%5Cn%20%20value%3A%20'body'%2C%5Cn%20%20MouseButtons%3A%20%7B%20LEFT%3A%200%2C%20MIDDLE%3A%201%2C%20RIGHT%3A%202%20%7D%2C%5Cn%20%20Keys%3A%20%5Cn%20%20%20%7B%20NULL%3A%20'%EE%80%80'%2C%5Cn%20%20%20%20%20CANCEL%3A%20'%EE%80%81'%2C%5Cn%20%20%20%20%20HELP%3A%20'%EE%80%82'%2C%5Cn%20%20%20%20%20BACK_SPACE%3A%20'%EE%80%83'%2C%5Cn%20%20%20%20%20TAB%3A%20'%EE%80%84'%2C%5Cn%20%20%20%20%20CLEAR%3A%20'%EE%80%85'%2C%5Cn%20%20%20%20%20RETURN%3A%20'%EE%80%86'%2C%5Cn%20%20%20%20%20ENTER%3A%20'%EE%80%87'%2C%5Cn%20%20%20%20%20SHIFT%3A%20'%EE%80%88'%2C%5Cn%20%20%20%20%20CONTROL%3A%20'%EE%80%89'%2C%5Cn%20%20%20%20%20CTRL%3A%20'%EE%80%89'%2C%5Cn%20%20%20%20%20ALT%3A%20'%EE%80%8A'%2C%5Cn%20%20%20%20%20PAUSE%3A%20'%EE%80%8B'%2C%5Cn%20%20%20%20%20ESCAPE%3A%20'%EE%80%8C'%2C%5Cn%20%20%20%20%20SPACE%3A%20'%EE%80%8D'%2C%5Cn%20%20%20%20%20PAGE_UP%3A%20'%EE%80%8E'%2C%5Cn%20%20%20%20%20PAGE_DOWN%3A%20'%EE%80%8F'%2C%5Cn%20%20%20%20%20END%3A%20'%EE%80%90'%2C%5Cn%20%20%20%20%20HOME%3A%20'%EE%80%91'%2C%5Cn%20%20%20%20%20ARROW_LEFT%3A%20'%EE%80%92'%2C%5Cn%20%20%20%20%20LEFT%3A%20'%EE%80%92'%2C%5Cn%20%20%20%20%20ARROW_UP%3A%20'%EE%80%93'%2C%5Cn%20%20%20%20%20UP%3A%20'%EE%80%93'%2C%5Cn%20%20%20%20%20ARROW_RIGHT%3A%20'%EE%80%94'%2C%5Cn%20%20%20%20%20RIGHT%3A%20'%EE%80%94'%2C%5Cn%20%20%20%20%20ARROW_DOWN%3A%20'%EE%80%95'%2C%5Cn%20%20%20%20%20DOWN%3A%20'%EE%80%95'%2C%5Cn%20%20%20%20%20INSERT%3A%20'%EE%80%96'%2C%5Cn%20%20%20%20%20DELETE%3A%20'%EE%80%97'%2C%5Cn%20%20%20%20%20SEMICOLON%3A%20'%EE%80%98'%2C%5Cn%20%20%20%20%20EQUALS%3A%20'%EE%80%99'%2C%5Cn%20%20%20%20%20NUMPAD0%3A%20'%EE%80%9A'%2C%5Cn%20%20%20%20%20NUMPAD1%3A%20'%EE%80%9B'%2C%5Cn%20%20%20%20%20NUMPAD2%3A%20'%EE%80%9C'%2C%5Cn%20%20%20%20%20NUMPAD3%3A%20'%EE%80%9D'%2C%5Cn%20%20%20%20%20NUMPAD4%3A%20'%EE%80%9E'%2C%5Cn%20%20%20%20%20NUMPAD5%3A%20'%EE%80%9F'%2C%5Cn%20%20%20%20%20NUMPAD6%3A%20'%EE%80%A0'%2C%5Cn%20%20%20%20%20NUMPAD7%3A%20'%EE%80%A1'%2C%5Cn%20%20%20%20%20NUMPAD8%3A%20'%EE%80%A2'%2C%5Cn%20%20%20%20%20NUMPAD9%3A%20'%EE%80%A3'%2C%5Cn%20%20%20%20%20MULTIPLY%3A%20'%EE%80%A4'%2C%5Cn%20%20%20%20%20ADD%3A%20'%EE%80%A5'%2C%5Cn%20%20%20%20%20SEPARATOR%3A%20'%EE%80%A6'%2C%5Cn%20%20%20%20%20SUBTRACT%3A%20'%EE%80%A7'%2C%5Cn%20%20%20%20%20DECIMAL%3A%20'%EE%80%A8'%2C%5Cn%20%20%20%20%20DIVIDE%3A%20'%EE%80%A9'%2C%5Cn%20%20%20%20%20F1%3A%20'%EE%80%B1'%2C%5Cn%20%20%20%20%20F2%3A%20'%EE%80%B2'%2C%5Cn%20%20%20%20%20F3%3A%20'%EE%80%B3'%2C%5Cn%20%20%20%20%20F4%3A%20'%EE%80%B4'%2C%5Cn%20%20%20%20%20F5%3A%20'%EE%80%B5'%2C%5Cn%20%20%20%20%20F6%3A%20'%EE%80%B6'%2C%5Cn%20%20%20%20%20F7%3A%20'%EE%80%B7'%2C%5Cn%20%20%20%20%20F8%3A%20'%EE%80%B8'%2C%5Cn%20%20%20%20%20F9%3A%20'%EE%80%B9'%2C%5Cn%20%20%20%20%20F10%3A%20'%EE%80%BA'%2C%5Cn%20%20%20%20%20F11%3A%20'%EE%80%BB'%2C%5Cn%20%20%20%20%20F12%3A%20'%EE%80%BC'%2C%5Cn%20%20%20%20%20COMMAND%3A%20'%EE%80%BD'%2C%5Cn%20%20%20%20%20META%3A%20'%EE%80%BD'%20%7D%2C%5Cn%20%20elementIds%3A%20%5B%20'0.16128187706588837-1'%20%5D%2C%5Cn%20%20length%3A%201%20%7D%22%2C%22id%22%3A%22I4fEY%22%7D\"></card><p><br /></p><h4 id=\"ALjSc\">3.1.3 解决方案</h4><ul><li>压缩 object：</li></ul><ul data-lake-indent=\"1\"><li>mocha 运行结果只取最后断言结果：mocha 运行过程中返回的 object 是执行过程中不断更新的，不是一个步骤完成后，将断言结果合并到 object。</li><li>object 提取部分重要属性返回：可能后续功能拓展需要提取更多数据。</li></ul><ul><li>优化 json stringify：</li></ul><ul data-lake-indent=\"1\"><li> <code>safe-json-stringify</code> 可以执行完成，但返回的 object 不够完整，reporter 渲染无法拿到相关数据。</li><li>fork <code>circular-json</code> ，提出 promise object 。☑️采取方案</li></ul><p><br /></p><h3 id=\"mONYj\">3.2 视图渲染拓展</h3><ul><li>对 <code>suites</code> 数组渲染进行兼容。（单个测试用例是一个 <code>suites</code> 对象）</li></ul>","public":1,"status":null,"likes_count":1,"comments_count":0,"content_updated_at":"2019-07-09T02:13:10.000Z","deleted_at":null,"created_at":"2019-07-09T02:12:33.000Z","updated_at":"2019-07-16T01:40:04.000Z","published_at":"2019-07-09T02:13:10.000Z","first_published_at":"2019-07-09T02:13:10.000Z","word_count":1447,"cover":null,"description":"一、 Mocha技术栈升级1.1 Mocha@3.x -&gt; Mocha@5.xMocha 在回归测试过程中的定位为 Runner，升级版本 3.x -&gt; 5.x 后，数据快照并无较大差异， stat 、 suites 、 tests 等主要数据对象结构可以直接兼容。二、Report...","custom_description":null,"_serializer":"v2.doc_detail"}