{"id":1961259,"slug":"uqgnhu","title":"UIRecoder 3 发布记录","book_id":187563,"book":{"id":187563,"type":"Book","slug":"uirecorder","name":"UIRecorder","user_id":296279,"description":"一端录制，多端使用的便捷 UI 自动化测试工具","creator_id":94302,"public":1,"items_count":12,"likes_count":0,"watches_count":8,"content_updated_at":"2019-06-23T14:04:31.890Z","updated_at":"2019-06-23T14:04:31.000Z","created_at":"2018-12-11T06:11:00.000Z","namespace":"artist/uirecorder","user":{"id":296279,"type":"Group","login":"artist","name":"F&D艺术家-前端自动化测试","description":"探索与推广前端自动化测试","avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150693943-avatar/c80e9798-27e4-4238-8760-4bb5828a7228.png","large_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150693943-avatar/c80e9798-27e4-4238-8760-4bb5828a7228.png?x-oss-process=image/resize,m_fill,w_320,h_320","medium_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150693943-avatar/c80e9798-27e4-4238-8760-4bb5828a7228.png?x-oss-process=image/resize,m_fill,w_160,h_160","small_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150693943-avatar/c80e9798-27e4-4238-8760-4bb5828a7228.png?x-oss-process=image/resize,m_fill,w_80,h_80","books_count":3,"public_books_count":3,"followers_count":0,"following_count":0,"created_at":"2019-03-21T06:44:55.000Z","updated_at":"2019-05-08T06:23:34.000Z","_serializer":"v2.user"},"_serializer":"v2.book"},"user_id":94302,"creator":{"id":94302,"type":"User","login":"linshuoting","name":"说听(Stngle)","description":"F&D艺术家   \nhttps://github.com/Stngle","avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150368242-avatar/4fa5a6cc-1636-43cd-b085-fce8ad30be09.png","large_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150368242-avatar/4fa5a6cc-1636-43cd-b085-fce8ad30be09.png?x-oss-process=image/resize,m_fill,w_320,h_320","medium_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150368242-avatar/4fa5a6cc-1636-43cd-b085-fce8ad30be09.png?x-oss-process=image/resize,m_fill,w_160,h_160","small_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150368242-avatar/4fa5a6cc-1636-43cd-b085-fce8ad30be09.png?x-oss-process=image/resize,m_fill,w_80,h_80","books_count":1,"public_books_count":0,"followers_count":6,"following_count":3,"created_at":"2018-03-21T12:59:06.000Z","updated_at":"2019-06-24T01:54:44.000Z","_serializer":"v2.user"},"format":"lake","body":"","body_draft":"","body_html":"<h2 id=\"HnLvn\">一、升级内容</h2><p><br /></p><p><span style=\"color: #191F25;\">      为了给用户提供更好的使用体验，UIRecoder 第3版对 Reporter 和底层执行库做了升级，稳定性和效率有所增强，且更加贴近用户使用习惯。</span></p><p><span style=\"color: #191F25;\"><br /></span></p><h3 id=\"GpVYL\">1.1 Reporter</h3><h4 id=\"ZWzT9\">1.1.1 多维度的结果展示模式</h4><ul><li>链路树模式：链路树模式是最常用也是默认的展示模式，将用例的组织结构按照树来展示，且在每个用例结束前自动产生截图。链路树模式方便还原业务产品的测试执行路径。</li></ul><p><br /></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/94302/1561296573304-f865bc99-1842-45ed-b589-a87708c68944.png#align=left&amp;display=inline&amp;height=9200&amp;name=image.png&amp;originHeight=9200&amp;originWidth=3036&amp;size=1734724&amp;status=done&amp;width=3036\" style=\"max-width: 600px; width: 3036px;\" /></p><p><br /></p><ul><li>思维导图模式：思维导图模式可以认为是全部用例的概览，这个视图更方便用户整理和组织用例，在改进、补充新测试用例前可作为分析依据。<img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/94302/1561296573300-b397a100-6a6a-4e32-8e6b-590ae82bd5ec.png#align=left&amp;display=inline&amp;height=1553&amp;name=image.png&amp;originHeight=1553&amp;originWidth=3036&amp;size=288281&amp;status=done&amp;width=3036\" style=\"max-width: 600px; width: 3036px;\" /></li><li>全图模式：提取了测试过程中的全部截图，更适用于偏渲染展示型的功能测试，在交付下一阶段前可以作为质量依据从而降低成本。</li></ul><p><br /></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/94302/1561298314560-3f966796-4044-4557-bcd3-8b458c029a0c.png#align=left&amp;display=inline&amp;height=1540&amp;name=image.png&amp;originHeight=1540&amp;originWidth=3036&amp;size=737358&amp;status=done&amp;width=3036\" style=\"max-width: 600px; width: 3036px;\" /></p><ul><li>列表模式：全部用例的列表展示，包括用例源码、运行结果等信息。</li></ul><p><br /></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/94302/1561296573304-e2366741-549e-43fa-9402-9a309f427fe9.png#align=left&amp;display=inline&amp;height=3421&amp;name=image.png&amp;originHeight=3421&amp;originWidth=3036&amp;size=580228&amp;status=done&amp;width=3036\" style=\"max-width: 600px; width: 3036px;\" /></p><p><br /></p><p><br /></p><h4 id=\"YRUri\">1.1.2 支持二次开发</h4><ul><li>执行测试用例生成的 <code>/reports</code> 目录下，包含上述渲染效果的文件 <code>index.html</code> ，同时也将执行结果的数据快照保存至文件 <code>json-final.json</code> ，以支持二次开发。常见的二次开发场景比如：</li></ul><ul data-lake-indent=\"1\"><li>自定义渲染效果：自定义渲染模版，读取 json 文件数据，根据需要提取数据，生成自定义渲染效果测试报告。</li><li>生成数据报表：读取 json 文件内容，提取相关数据，存到数据库中。需要时，可读取数据库数据获取不同时间段执行结果数据报表。</li></ul><p><br /></p><blockquote style=\"padding-left: 1em;\"><p>更多关于 macaca-reporter：<a href=\"https://macacajs.github.io/macaca-reporter/zh/\" target=\"_blank\">https://macacajs.github.io/macaca-reporter/zh/</a></p></blockquote><p><br /></p><h3 id=\"GhUKE\">1.2 Mocha</h3><h4 id=\"3dPdj\">1.2.1 mocha v3-&gt;v5</h4><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/94302/1561296573331-61b1ab98-4aab-4e9c-aca2-d65c3968e1a8.png#align=left&amp;display=inline&amp;height=687&amp;name=image.png&amp;originHeight=1374&amp;originWidth=1518&amp;size=248708&amp;status=done&amp;width=759\" style=\"max-width: 600px; width: 759px;\" /></p><p><br /></p><ul><li>上图为 npm 中 mocha 各历史版本发布时间，mocha@5.x 版本目前为社区稳定版本，因此本次升级，UIRecorder 及 macaca-reporter 均对 mocha@5.x 版本做了兼容，与开源社区主流版本保持同步。而 mocha@3.x 执行结果的数据快照与 mocha@5.x 并无太大差异，对于现有测试用例影响不大。</li></ul><p><br /></p><h4 id=\"5v4xs\">1.2.2 mocha-parallel-tests v1-&gt;v2</h4><ul><li>优化并行执行库： <code>mocha-parallel-tests</code>  采用各子进程分别执行一个测试用例脚本，主进程收集各子进程执行结果的方式，使得每个测试用例脚本并行执行结果与单独执行该测试用例脚本结果一致。而并行执行的方式，明显提高了测试用例的执行效率。</li><li>后续规划更具掌握度：本次升级通过 fork 的方式，引入了 <code>macaca-mocha-parallel-tests</code> 及 <code>macaca-circular-json</code> 依赖包并针对 Web 回归测试场景做了相关优化，后续通过自主维护的方式，使得并行执行库的迭代优化更加可控。</li></ul><p><br /></p><h2 id=\"lDOkA\">二、升级步骤</h2><h3 id=\"06zR6\">2.1 新建工程改造</h3><ul><li>新建工程只需全局升级 <code>uirecorder</code> 录制即可，运行命令如下：</li><li><br /></li></ul><pre><code>sudo npm update uirecorder -g\t\t// 全局升级 uirecorder\nuirecorder init\t\t\t\t\t\t\t\t\t// 初始化测试用例工程\nuirecorder start\t\t\t\t\t\t\t\t// 开始录制测试用例</code></pre><p><br /></p><h3 id=\"NYQBZ\">2.2 已有工程改造</h3><h4 id=\"kxy9v\">2.2.1 升级依赖包</h4><ul><li>全局升级 <code>uirecorder</code> ，运行命令如下：</li><li><br /></li></ul><pre><code>sudo npm update uirecorder -g</code></pre><ul><li><br /></li><li>修改 <code>package.json</code> 文件内容如下：</li></ul><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/94302/1561296573311-4de87913-3e90-40e1-8c4e-99272c026d0a.png#align=left&amp;display=inline&amp;height=622&amp;name=image.png&amp;originHeight=1244&amp;originWidth=2834&amp;size=1974434&amp;status=done&amp;width=1417\" style=\"max-width: 600px; width: 1417px;\" /></p><p>修改完成后，更新相关 npm 依赖包，运行命令如下：</p><p><br /></p><pre><code>npm update\n\n// 或者运行\nrm -rf node_modules\nnpm install</code></pre><p><br /></p><h4 id=\"b0cBh\">2.2.2 修改测试用例</h4><ul><li>测试用例指 <code>*.spec.js</code> 文件，修改的目的是引入每个步骤执行后的截图，修改内容如下：</li></ul><ul data-lake-indent=\"1\"><li>每个执行步骤结束时(afterEach)，添加截图至上下文(ctx)</li></ul><p><br /></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/94302/1561298269631-14634701-808f-431a-86dc-85638948f929.png#align=left&amp;display=inline&amp;height=511&amp;name=image.png&amp;originHeight=1022&amp;originWidth=2668&amp;size=1556070&amp;status=done&amp;width=1334\" style=\"max-width: 600px; width: 1334px;\" /></p><pre><code>appendToContext(self, filepath + '.png');</code></pre><p><br /></p><ul data-lake-indent=\"1\"><li>测试用例末尾，引入 <code>appendToContext</code>  函数</li></ul><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/94302/1561296573322-f0575af3-a1de-4216-990e-38e9a37267a9.png#align=left&amp;display=inline&amp;height=421&amp;name=image.png&amp;originHeight=842&amp;originWidth=2844&amp;size=537027&amp;status=done&amp;width=1422\" style=\"max-width: 600px; width: 1422px;\" /></p><p><br /></p><pre><code>function appendToContext(mocha, content) {\n    try {\n        const test = mocha.currentTest || mocha.test;\n\n        if (!test.context) {\n            test.context = content;\n        } else if (Array.isArray(test.context)) {\n            test.context.push(content);\n        } else {\n            test.context = [test.context];\n            test.context.push(content);\n        }\n    } catch (e) {\n        console.log('error', e);\n    }\n};</code></pre><p><br /></p>","body_lake":"<!doctype lake><h2 id=\"HnLvn\">一、升级内容</h2><p><br /></p><p><span style=\"color: #191F25;\">      为了给用户提供更好的使用体验，UIRecoder 第3版对<cursor /> Reporter 和底层执行库做了升级，稳定性和效率有所增强，且更加贴近用户使用习惯。</span></p><p><span style=\"color: #191F25;\"><br /></span></p><h3 id=\"GpVYL\">1.1 Reporter</h3><h4 id=\"ZWzT9\">1.1.1 多维度的结果展示模式</h4><ul><li>链路树模式：链路树模式是最常用也是默认的展示模式，将用例的组织结构按照树来展示，且在每个用例结束前自动产生截图。链路树模式方便还原业务产品的测试执行路径。</li></ul><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F94302%2F1561296573304-f865bc99-1842-45ed-b589-a87708c68944.png%22%2C%22originWidth%22%3A3036%2C%22originHeight%22%3A9200%2C%22name%22%3A%22image.png%22%2C%22size%22%3A1734724%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A3036%2C%22height%22%3A9200%7D\"></card></p><p><br /></p><ul><li>思维导图模式：思维导图模式可以认为是全部用例的概览，这个视图更方便用户整理和组织用例，在改进、补充新测试用例前可作为分析依据。<card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F94302%2F1561296573300-b397a100-6a6a-4e32-8e6b-590ae82bd5ec.png%22%2C%22originWidth%22%3A3036%2C%22originHeight%22%3A1553%2C%22name%22%3A%22image.png%22%2C%22size%22%3A288281%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A3036%2C%22height%22%3A1553%7D\"></card></li><li>全图模式：提取了测试过程中的全部截图，更适用于偏渲染展示型的功能测试，在交付下一阶段前可以作为质量依据从而降低成本。</li></ul><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F94302%2F1561298314560-3f966796-4044-4557-bcd3-8b458c029a0c.png%22%2C%22originWidth%22%3A3036%2C%22originHeight%22%3A1540%2C%22name%22%3A%22image.png%22%2C%22size%22%3A737358%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A3036%2C%22height%22%3A1540%7D\"></card></p><ul><li>列表模式：全部用例的列表展示，包括用例源码、运行结果等信息。</li></ul><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F94302%2F1561296573304-e2366741-549e-43fa-9402-9a309f427fe9.png%22%2C%22originWidth%22%3A3036%2C%22originHeight%22%3A3421%2C%22name%22%3A%22image.png%22%2C%22size%22%3A580228%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A3036%2C%22height%22%3A3421%7D\"></card></p><p><br /></p><p><br /></p><h4 id=\"YRUri\">1.1.2 支持二次开发</h4><ul><li>执行测试用例生成的 <code>/reports</code> 目录下，包含上述渲染效果的文件 <code>index.html</code> ，同时也将执行结果的数据快照保存至文件 <code>json-final.json</code> ，以支持二次开发。常见的二次开发场景比如：</li></ul><ul data-lake-indent=\"1\"><li>自定义渲染效果：自定义渲染模版，读取 json 文件数据，根据需要提取数据，生成自定义渲染效果测试报告。</li><li>生成数据报表：读取 json 文件内容，提取相关数据，存到数据库中。需要时，可读取数据库数据获取不同时间段执行结果数据报表。</li></ul><p><br /></p><blockquote style=\"padding-left: 1em;\"><p>更多关于 macaca-reporter：<a href=\"https://macacajs.github.io/macaca-reporter/zh/\" target=\"_blank\">https://macacajs.github.io/macaca-reporter/zh/</a></p></blockquote><p><br /></p><h3 id=\"GhUKE\">1.2 Mocha</h3><h4 id=\"3dPdj\">1.2.1 mocha v3-&gt;v5</h4><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F94302%2F1561296573331-61b1ab98-4aab-4e9c-aca2-d65c3968e1a8.png%22%2C%22originWidth%22%3A1518%2C%22originHeight%22%3A1374%2C%22name%22%3A%22image.png%22%2C%22size%22%3A248708%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A759%2C%22height%22%3A687%7D\"></card></p><p><br /></p><ul><li>上图为 npm 中 mocha 各历史版本发布时间，mocha@5.x 版本目前为社区稳定版本，因此本次升级，UIRecorder 及 macaca-reporter 均对 mocha@5.x 版本做了兼容，与开源社区主流版本保持同步。而 mocha@3.x 执行结果的数据快照与 mocha@5.x 并无太大差异，对于现有测试用例影响不大。</li></ul><p><br /></p><h4 id=\"5v4xs\">1.2.2 mocha-parallel-tests v1-&gt;v2</h4><ul><li>优化并行执行库： <code>mocha-parallel-tests</code>  采用各子进程分别执行一个测试用例脚本，主进程收集各子进程执行结果的方式，使得每个测试用例脚本并行执行结果与单独执行该测试用例脚本结果一致。而并行执行的方式，明显提高了测试用例的执行效率。</li><li>后续规划更具掌握度：本次升级通过 fork 的方式，引入了 <code>macaca-mocha-parallel-tests</code> 及 <code>macaca-circular-json</code> 依赖包并针对 Web 回归测试场景做了相关优化，后续通过自主维护的方式，使得并行执行库的迭代优化更加可控。</li></ul><p><br /></p><h2 id=\"lDOkA\">二、升级步骤</h2><h3 id=\"06zR6\">2.1 新建工程改造</h3><ul><li>新建工程只需全局升级 <code>uirecorder</code> 录制即可，运行命令如下：</li><li><br /></li></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22sudo%20npm%20update%20uirecorder%20-g%5Ct%5Ct%2F%2F%20%E5%85%A8%E5%B1%80%E5%8D%87%E7%BA%A7%20uirecorder%5Cnuirecorder%20init%5Ct%5Ct%5Ct%5Ct%5Ct%5Ct%5Ct%5Ct%5Ct%2F%2F%20%E5%88%9D%E5%A7%8B%E5%8C%96%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E5%B7%A5%E7%A8%8B%5Cnuirecorder%20start%5Ct%5Ct%5Ct%5Ct%5Ct%5Ct%5Ct%5Ct%2F%2F%20%E5%BC%80%E5%A7%8B%E5%BD%95%E5%88%B6%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%22%2C%22id%22%3A%22l68on%22%7D\"></card><p><br /></p><h3 id=\"NYQBZ\">2.2 已有工程改造</h3><h4 id=\"kxy9v\">2.2.1 升级依赖包</h4><ul><li>全局升级 <code>uirecorder</code> ，运行命令如下：</li><li><br /></li></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22sudo%20npm%20update%20uirecorder%20-g%22%2C%22id%22%3A%22ZvIdH%22%7D\"></card><ul><li><br /></li><li>修改 <code>package.json</code> 文件内容如下：</li></ul><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F94302%2F1561296573311-4de87913-3e90-40e1-8c4e-99272c026d0a.png%22%2C%22originWidth%22%3A2834%2C%22originHeight%22%3A1244%2C%22name%22%3A%22image.png%22%2C%22size%22%3A1974434%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1417%2C%22height%22%3A622%7D\"></card></p><p>修改完成后，更新相关 npm 依赖包，运行命令如下：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22npm%20update%5Cn%5Cn%2F%2F%20%E6%88%96%E8%80%85%E8%BF%90%E8%A1%8C%5Cnrm%20-rf%20node_modules%5Cnnpm%20install%22%2C%22id%22%3A%22D6cac%22%7D\"></card><p><br /></p><h4 id=\"b0cBh\">2.2.2 修改测试用例</h4><ul><li>测试用例指 <code>*.spec.js</code> 文件，修改的目的是引入每个步骤执行后的截图，修改内容如下：</li></ul><ul data-lake-indent=\"1\"><li>每个执行步骤结束时(afterEach)，添加截图至上下文(ctx)</li></ul><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F94302%2F1561298269631-14634701-808f-431a-86dc-85638948f929.png%22%2C%22originWidth%22%3A2668%2C%22originHeight%22%3A1022%2C%22name%22%3A%22image.png%22%2C%22size%22%3A1556070%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1334%2C%22height%22%3A511%7D\"></card></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22appendToContext(self%2C%20filepath%20%2B%20'.png')%3B%22%2C%22id%22%3A%224SqzK%22%7D\"></card><p><br /></p><ul data-lake-indent=\"1\"><li>测试用例末尾，引入 <code>appendToContext</code>  函数</li></ul><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F94302%2F1561296573322-f0575af3-a1de-4216-990e-38e9a37267a9.png%22%2C%22originWidth%22%3A2844%2C%22originHeight%22%3A842%2C%22name%22%3A%22image.png%22%2C%22size%22%3A537027%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1422%2C%22height%22%3A421%7D\"></card></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22function%20appendToContext(mocha%2C%20content)%20%7B%5Cn%20%20%20%20try%20%7B%5Cn%20%20%20%20%20%20%20%20const%20test%20%3D%20mocha.currentTest%20%7C%7C%20mocha.test%3B%5Cn%5Cn%20%20%20%20%20%20%20%20if%20(!test.context)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20test.context%20%3D%20content%3B%5Cn%20%20%20%20%20%20%20%20%7D%20else%20if%20(Array.isArray(test.context))%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20test.context.push(content)%3B%5Cn%20%20%20%20%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20test.context%20%3D%20%5Btest.context%5D%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20test.context.push(content)%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%20catch%20(e)%20%7B%5Cn%20%20%20%20%20%20%20%20console.log('error'%2C%20e)%3B%5Cn%20%20%20%20%7D%5Cn%7D%3B%22%2C%22id%22%3A%226cfZM%22%7D\"></card><p><br /></p>","public":1,"status":null,"likes_count":4,"comments_count":0,"content_updated_at":"2019-06-23T14:04:31.000Z","deleted_at":null,"created_at":"2019-06-23T13:29:04.000Z","updated_at":"2019-06-24T06:39:49.000Z","published_at":"2019-06-23T14:04:31.000Z","first_published_at":"2019-06-23T13:50:56.000Z","word_count":1013,"cover":null,"description":"一、升级内容      为了给用户提供更好的使用体验，UIRecoder 第3版对 Reporter 和底层执行库做了升级，稳定性和效率有所增强，且更加贴近用户使用习惯。1.1 Reporter1.1.1 多维度的结果展示模式链路树模式：链路树模式是最常用也是默认的展示模式，将用例的组织结构按...","custom_description":null,"_serializer":"v2.doc_detail"}