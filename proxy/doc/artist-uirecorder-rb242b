{"id":2121842,"slug":"rb242b","title":"自定义录制模版","book_id":187563,"book":{"id":187563,"type":"Book","slug":"uirecorder","name":"UIRecorder","user_id":296279,"description":"一端录制，多端使用的便捷 UI 自动化测试工具","creator_id":94302,"public":1,"items_count":22,"likes_count":0,"watches_count":12,"content_updated_at":"2019-10-11T06:31:45.205Z","updated_at":"2019-10-11T06:31:45.000Z","created_at":"2018-12-11T06:11:00.000Z","namespace":"artist/uirecorder","user":{"id":296279,"type":"Group","login":"artist","name":"F&D艺术家-前端自动化测试","description":"探索与推广前端自动化测试","avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150693943-avatar/c80e9798-27e4-4238-8760-4bb5828a7228.png","large_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150693943-avatar/c80e9798-27e4-4238-8760-4bb5828a7228.png?x-oss-process=image/resize,m_fill,w_320,h_320","medium_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150693943-avatar/c80e9798-27e4-4238-8760-4bb5828a7228.png?x-oss-process=image/resize,m_fill,w_160,h_160","small_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150693943-avatar/c80e9798-27e4-4238-8760-4bb5828a7228.png?x-oss-process=image/resize,m_fill,w_80,h_80","books_count":4,"public_books_count":4,"followers_count":0,"following_count":0,"created_at":"2019-03-21T06:44:55.000Z","updated_at":"2019-08-08T02:30:37.000Z","_serializer":"v2.user"},"_serializer":"v2.book"},"user_id":94302,"creator":{"id":94302,"type":"User","login":"linshuoting","name":"说听(Stngle)","description":"F&D艺术家   \nhttps://github.com/Stngle","avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150368242-avatar/4fa5a6cc-1636-43cd-b085-fce8ad30be09.png","large_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150368242-avatar/4fa5a6cc-1636-43cd-b085-fce8ad30be09.png?x-oss-process=image/resize,m_fill,w_320,h_320","medium_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150368242-avatar/4fa5a6cc-1636-43cd-b085-fce8ad30be09.png?x-oss-process=image/resize,m_fill,w_160,h_160","small_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150368242-avatar/4fa5a6cc-1636-43cd-b085-fce8ad30be09.png?x-oss-process=image/resize,m_fill,w_80,h_80","books_count":2,"public_books_count":1,"followers_count":8,"following_count":6,"created_at":"2018-03-21T12:59:06.000Z","updated_at":"2019-10-09T08:37:02.000Z","_serializer":"v2.user"},"format":"lake","body":"","body_draft":"","body_html":"<h2 id=\"a11edfd6\">一、概述</h2><p>支持修改 uirecorder 默认模板，可以在模板里实现数据 mock，设置浏览器启动参数、设置钩子等。</p><h3 id=\"d41d8cd9\"><br /></h3><h2 id=\"5f37c0b5\">二、使用方式</h2><p>在初始化目录新建 template 目录，支持移动端模板和 PC 端模板定制。</p><blockquote style=\"padding-left: 1em;\"><p>移动端录制模板</p><p>jwebdriver-mobile.js</p><p>PC 端录制模板</p><p>jwebdriver.js</p></blockquote><p><br /></p><h2 id=\"ef8551a8\">三、使用案例</h2><h3 id=\"d080d97a\">3.1 修改浏览器启动参数</h3><p>在 ci 中设置 chrome 为无头浏览器，可以使用下面的模板</p><p><br /></p><pre data-lang=\"javascript\"><code>const fs = require('fs');\nconst path = require('path');\nconst chai = require(&quot;chai&quot;);\nconst should = chai.should();\nconst JWebDriver = require('jwebdriver');\nchai.use(JWebDriver.chaiSupportChainPromise);\nconst resemble = require('resemblejs-node');\nresemble.outputSettings({\n  errorType: 'flatDifferenceIntensity'\n});\n\nconst rootPath = getRootPath();\n\nmodule.exports = function () {\n\n  let driver, testVars;\n\n  before(function () {\n    let self = this;\n    driver = self.driver;\n    testVars = self.testVars;\n  });\n\n  {$testCodes}\n\n  function _(str) {\n    if (typeof str === 'string') {\n      return str.replace(/\\{\\{(.+?)\\}\\}/g, function (all, key) {\n        return testVars[key] || '';\n      });\n    } else {\n      return str;\n    }\n  }\n\n};\n\nif (module.parent &amp;&amp; /mocha\\.js/.test(module.parent.id)) {\n  runThisSpec();\n}\n\nfunction runThisSpec() {\n  // read config\n  let webdriver = process.env['webdriver'] || '';\n  let proxy = process.env['wdproxy'] || '';\n  let config = require(rootPath + '/config.json');\n  let webdriverConfig = Object.assign({}, config.webdriver);\n  let host = webdriverConfig.host;\n  let port = webdriverConfig.port || 4444;\n  let match = webdriver.match(/([^\\:]+)(?:\\:(\\d+))?/);\n  if (match) {\n    host = match[1] || host;\n    port = match[2] || port;\n  }\n  let testVars = config.vars;\n  let browsers = webdriverConfig.browsers;\n  browsers = browsers.replace(/^\\s+|\\s+$/g, '');\n  delete webdriverConfig.host;\n  delete webdriverConfig.port;\n  delete webdriverConfig.browsers;\n\n  // read hosts\n  let hostsPath = rootPath + '/hosts';\n  let hosts = '';\n  if (fs.existsSync(hostsPath)) {\n    hosts = fs.readFileSync(hostsPath).toString();\n  }\n  let specName = path.relative(rootPath, __filename).replace(/\\\\/g, '/').replace(/\\.js$/, '');\n\n  browsers.split(/\\s*,\\s*/).forEach(function (browserName) {\n    let caseName = specName + ' : ' + browserName;\n\n    let browserInfo = browserName.split(' ');\n    browserName = browserInfo[0];\n    let browserVersion = browserInfo[1];\n\n    describe(caseName, function () {\n\n      this.timeout(600000);\n      this.slow(1000);\n\n      let driver;\n      before(function () {\n        let self = this;\n        let driver = new JWebDriver({\n          'host': host,\n          'port': port\n        });\n        let sessionConfig = Object.assign({}, webdriverConfig, {\n          'browserName': browserName,\n          'version': browserVersion,\n          'ie.ensureCleanSession': true,\n          'chromeOptions': {\n            'args': [\n              '--headless',\n              '--disable-dev-shm-usage',\n              '--no-sandbox',\n            ]\n          }\n        });\n        if (proxy) {\n          sessionConfig.proxy = {\n            'proxyType': 'manual',\n            'httpProxy': proxy,\n            'sslProxy': proxy\n          }\n        } else if (hosts) {\n          sessionConfig.hosts = hosts;\n        }\n\n        try {\n          self.driver = driver.session(sessionConfig).windowSize(1380, 768).config({\n            pageloadTimeout: 30000, // page onload timeout\n            scriptTimeout: 5000, // sync script timeout\n            asyncScriptTimeout: 10000 // async script timeout\n          });\n        } catch (e) {\n          console.log(e);\n        }\n\n        self.testVars = testVars;\n        let casePath = path.dirname(caseName);\n        self.screenshotPath = rootPath + '/screenshots/' + casePath;\n        self.diffbasePath = rootPath + '/diffbase/' + casePath;\n        self.caseName = caseName.replace(/.*\\//g, '').replace(/\\s*[:\\.\\:\\-\\s]\\s*/g, '_');\n        mkdirs(self.screenshotPath);\n        mkdirs(self.diffbasePath);\n        self.stepId = 0;\n        return self.driver;\n      });\n\n      module.exports();\n\n      beforeEach(function () {\n        let self = this;\n        self.stepId++;\n        if (self.skipAll) {\n          self.skip();\n        }\n      });\n\n      afterEach(async function () {\n        let self = this;\n        let currentTest = self.currentTest;\n        let title = currentTest.title;\n        if (currentTest.state === 'failed' &amp;&amp; /^(url|waitBody|switchWindow|switchFrame):/.test(title)) {\n          self.skipAll = true;\n        }\n        if (!/^(closeWindow):/.test(title)) {\n          let filepath = self.screenshotPath + '/' + self.caseName + '_' + self.stepId;\n          let driver = self.driver;\n          try {\n            // catch error when get alert msg\n            await driver.getScreenshot(filepath + '.png');\n            let url = await driver.url();\n            let html = await driver.source();\n            html = '&lt;!--url: ' + url + ' --&gt;\\n' + html;\n            fs.writeFileSync(filepath + '.html', html);\n            let cookies = await driver.cookies();\n            fs.writeFileSync(filepath + '.cookie', JSON.stringify(cookies));\n          } catch (e) {}\n        }\n      });\n\n      after(function () {\n        return this.driver.close();\n      });\n\n    });\n  });\n}\n\nfunction getRootPath() {\n  let rootPath = path.resolve(__dirname);\n  while (rootPath) {\n    if (fs.existsSync(rootPath + '/config.json')) {\n      break;\n    }\n    rootPath = rootPath.substring(0, rootPath.lastIndexOf(path.sep));\n  }\n  return rootPath;\n}\n\nfunction mkdirs(dirname) {\n  if (fs.existsSync(dirname)) {\n    return true;\n  } else {\n    if (mkdirs(path.dirname(dirname))) {\n      fs.mkdirSync(dirname);\n      return true;\n    }\n  }\n}\n\nfunction callSpec(name) {\n  try {\n    require(rootPath + '/' + name)();\n  } catch (e) {\n    console.log(e)\n    process.exit(1);\n  }\n}\n\nfunction isPageError(code) {\n  return code == '' || / jscontent=&quot;errorCode&quot; jstcache=&quot;\\d+&quot;|diagnoseConnectionAndRefresh|dnserror_unavailable_header|id=&quot;reportCertificateErrorRetry&quot;|400 Bad Request|403 Forbidden|404 Not Found|500 Internal Server Error|502 Bad Gateway|503 Service Temporarily Unavailable|504 Gateway Time-out/i.test(code);\n}\n\nfunction catchError(error) {\n\n}\n</code></pre><p><br /></p><p>主要配置在这里</p><p><br /></p><pre data-lang=\"javascript\"><code>let sessionConfig = Object.assign({}, webdriverConfig, {\n  'browserName': browserName,\n  'version': browserVersion,\n  'ie.ensureCleanSession': true,\n  'chromeOptions': {\n    'args': [\n      '--headless',\n      '--disable-dev-shm-usage',\n      '--no-sandbox',\n    ]\n  }\n});</code></pre><p><br /></p><p>其他 chrome 配置信息可参见 <a href=\"https://peter.sh/experiments/chromium-command-line-switches/\" target=\"_blank\">https://peter.sh/experiments/chromium-command-line-switches/</a> </p>","body_lake":"<!doctype lake><h2 id=\"a11edfd6\">一、概述</h2><p>支持修改 uirecorder 默认模板，可以在模板里实现数据 mock，设置浏览器启动参数、设置钩子等。</p><h3 id=\"d41d8cd9\"><br /></h3><h2 id=\"5f37c0b5\">二、使用方式</h2><p>在初始化目录新建 template 目录，支持移动端模板和 PC 端模板定制。</p><blockquote style=\"padding-left: 1em;\"><p>移动端录制模板</p><p>jwebdriver-mobile.js</p><p>PC 端录制模板</p><p>jwebdriver.js</p></blockquote><p><br /></p><h2 id=\"ef8551a8\">三、使用案例</h2><h3 id=\"d080d97a\">3.1 修改浏览器启动参数</h3><p>在 ci 中设置 chrome 为无头浏览器，可以使用下面的模板</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20fs%20%3D%20require('fs')%3B%5Cnconst%20path%20%3D%20require('path')%3B%5Cnconst%20chai%20%3D%20require(%5C%22chai%5C%22)%3B%5Cnconst%20should%20%3D%20chai.should()%3B%5Cnconst%20JWebDriver%20%3D%20require('jwebdriver')%3B%5Cnchai.use(JWebDriver.chaiSupportChainPromise)%3B%5Cnconst%20resemble%20%3D%20require('resemblejs-node')%3B%5Cnresemble.outputSettings(%7B%5Cn%20%20errorType%3A%20'flatDifferenceIntensity'%5Cn%7D)%3B%5Cn%5Cnconst%20rootPath%20%3D%20getRootPath()%3B%5Cn%5Cnmodule.exports%20%3D%20function%20()%20%7B%5Cn%5Cn%20%20let%20driver%2C%20testVars%3B%5Cn%5Cn%20%20before(function%20()%20%7B%5Cn%20%20%20%20let%20self%20%3D%20this%3B%5Cn%20%20%20%20driver%20%3D%20self.driver%3B%5Cn%20%20%20%20testVars%20%3D%20self.testVars%3B%5Cn%20%20%7D)%3B%5Cn%5Cn%20%20%7B%24testCodes%7D%5Cn%5Cn%20%20function%20_(str)%20%7B%5Cn%20%20%20%20if%20(typeof%20str%20%3D%3D%3D%20'string')%20%7B%5Cn%20%20%20%20%20%20return%20str.replace(%2F%5C%5C%7B%5C%5C%7B(.%2B%3F)%5C%5C%7D%5C%5C%7D%2Fg%2C%20function%20(all%2C%20key)%20%7B%5Cn%20%20%20%20%20%20%20%20return%20testVars%5Bkey%5D%20%7C%7C%20''%3B%5Cn%20%20%20%20%20%20%7D)%3B%5Cn%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20return%20str%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%5Cn%7D%3B%5Cn%5Cnif%20(module.parent%20%26%26%20%2Fmocha%5C%5C.js%2F.test(module.parent.id))%20%7B%5Cn%20%20runThisSpec()%3B%5Cn%7D%5Cn%5Cnfunction%20runThisSpec()%20%7B%5Cn%20%20%2F%2F%20read%20config%5Cn%20%20let%20webdriver%20%3D%20process.env%5B'webdriver'%5D%20%7C%7C%20''%3B%5Cn%20%20let%20proxy%20%3D%20process.env%5B'wdproxy'%5D%20%7C%7C%20''%3B%5Cn%20%20let%20config%20%3D%20require(rootPath%20%2B%20'%2Fconfig.json')%3B%5Cn%20%20let%20webdriverConfig%20%3D%20Object.assign(%7B%7D%2C%20config.webdriver)%3B%5Cn%20%20let%20host%20%3D%20webdriverConfig.host%3B%5Cn%20%20let%20port%20%3D%20webdriverConfig.port%20%7C%7C%204444%3B%5Cn%20%20let%20match%20%3D%20webdriver.match(%2F(%5B%5E%5C%5C%3A%5D%2B)(%3F%3A%5C%5C%3A(%5C%5Cd%2B))%3F%2F)%3B%5Cn%20%20if%20(match)%20%7B%5Cn%20%20%20%20host%20%3D%20match%5B1%5D%20%7C%7C%20host%3B%5Cn%20%20%20%20port%20%3D%20match%5B2%5D%20%7C%7C%20port%3B%5Cn%20%20%7D%5Cn%20%20let%20testVars%20%3D%20config.vars%3B%5Cn%20%20let%20browsers%20%3D%20webdriverConfig.browsers%3B%5Cn%20%20browsers%20%3D%20browsers.replace(%2F%5E%5C%5Cs%2B%7C%5C%5Cs%2B%24%2Fg%2C%20'')%3B%5Cn%20%20delete%20webdriverConfig.host%3B%5Cn%20%20delete%20webdriverConfig.port%3B%5Cn%20%20delete%20webdriverConfig.browsers%3B%5Cn%5Cn%20%20%2F%2F%20read%20hosts%5Cn%20%20let%20hostsPath%20%3D%20rootPath%20%2B%20'%2Fhosts'%3B%5Cn%20%20let%20hosts%20%3D%20''%3B%5Cn%20%20if%20(fs.existsSync(hostsPath))%20%7B%5Cn%20%20%20%20hosts%20%3D%20fs.readFileSync(hostsPath).toString()%3B%5Cn%20%20%7D%5Cn%20%20let%20specName%20%3D%20path.relative(rootPath%2C%20__filename).replace(%2F%5C%5C%5C%5C%2Fg%2C%20'%2F').replace(%2F%5C%5C.js%24%2F%2C%20'')%3B%5Cn%5Cn%20%20browsers.split(%2F%5C%5Cs*%2C%5C%5Cs*%2F).forEach(function%20(browserName)%20%7B%5Cn%20%20%20%20let%20caseName%20%3D%20specName%20%2B%20'%20%3A%20'%20%2B%20browserName%3B%5Cn%5Cn%20%20%20%20let%20browserInfo%20%3D%20browserName.split('%20')%3B%5Cn%20%20%20%20browserName%20%3D%20browserInfo%5B0%5D%3B%5Cn%20%20%20%20let%20browserVersion%20%3D%20browserInfo%5B1%5D%3B%5Cn%5Cn%20%20%20%20describe(caseName%2C%20function%20()%20%7B%5Cn%5Cn%20%20%20%20%20%20this.timeout(600000)%3B%5Cn%20%20%20%20%20%20this.slow(1000)%3B%5Cn%5Cn%20%20%20%20%20%20let%20driver%3B%5Cn%20%20%20%20%20%20before(function%20()%20%7B%5Cn%20%20%20%20%20%20%20%20let%20self%20%3D%20this%3B%5Cn%20%20%20%20%20%20%20%20let%20driver%20%3D%20new%20JWebDriver(%7B%5Cn%20%20%20%20%20%20%20%20%20%20'host'%3A%20host%2C%5Cn%20%20%20%20%20%20%20%20%20%20'port'%3A%20port%5Cn%20%20%20%20%20%20%20%20%7D)%3B%5Cn%20%20%20%20%20%20%20%20let%20sessionConfig%20%3D%20Object.assign(%7B%7D%2C%20webdriverConfig%2C%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20'browserName'%3A%20browserName%2C%5Cn%20%20%20%20%20%20%20%20%20%20'version'%3A%20browserVersion%2C%5Cn%20%20%20%20%20%20%20%20%20%20'ie.ensureCleanSession'%3A%20true%2C%5Cn%20%20%20%20%20%20%20%20%20%20'chromeOptions'%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20'args'%3A%20%5B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20'--headless'%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20'--disable-dev-shm-usage'%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20'--no-sandbox'%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5D%5Cn%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%7D)%3B%5Cn%20%20%20%20%20%20%20%20if%20(proxy)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20sessionConfig.proxy%20%3D%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20'proxyType'%3A%20'manual'%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20'httpProxy'%3A%20proxy%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20'sslProxy'%3A%20proxy%5Cn%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%7D%20else%20if%20(hosts)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20sessionConfig.hosts%20%3D%20hosts%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%20%20%20%20try%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20self.driver%20%3D%20driver.session(sessionConfig).windowSize(1380%2C%20768).config(%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20pageloadTimeout%3A%2030000%2C%20%2F%2F%20page%20onload%20timeout%5Cn%20%20%20%20%20%20%20%20%20%20%20%20scriptTimeout%3A%205000%2C%20%2F%2F%20sync%20script%20timeout%5Cn%20%20%20%20%20%20%20%20%20%20%20%20asyncScriptTimeout%3A%2010000%20%2F%2F%20async%20script%20timeout%5Cn%20%20%20%20%20%20%20%20%20%20%7D)%3B%5Cn%20%20%20%20%20%20%20%20%7D%20catch%20(e)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20console.log(e)%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%20%20%20%20self.testVars%20%3D%20testVars%3B%5Cn%20%20%20%20%20%20%20%20let%20casePath%20%3D%20path.dirname(caseName)%3B%5Cn%20%20%20%20%20%20%20%20self.screenshotPath%20%3D%20rootPath%20%2B%20'%2Fscreenshots%2F'%20%2B%20casePath%3B%5Cn%20%20%20%20%20%20%20%20self.diffbasePath%20%3D%20rootPath%20%2B%20'%2Fdiffbase%2F'%20%2B%20casePath%3B%5Cn%20%20%20%20%20%20%20%20self.caseName%20%3D%20caseName.replace(%2F.*%5C%5C%2F%2Fg%2C%20'').replace(%2F%5C%5Cs*%5B%3A%5C%5C.%5C%5C%3A%5C%5C-%5C%5Cs%5D%5C%5Cs*%2Fg%2C%20'_')%3B%5Cn%20%20%20%20%20%20%20%20mkdirs(self.screenshotPath)%3B%5Cn%20%20%20%20%20%20%20%20mkdirs(self.diffbasePath)%3B%5Cn%20%20%20%20%20%20%20%20self.stepId%20%3D%200%3B%5Cn%20%20%20%20%20%20%20%20return%20self.driver%3B%5Cn%20%20%20%20%20%20%7D)%3B%5Cn%5Cn%20%20%20%20%20%20module.exports()%3B%5Cn%5Cn%20%20%20%20%20%20beforeEach(function%20()%20%7B%5Cn%20%20%20%20%20%20%20%20let%20self%20%3D%20this%3B%5Cn%20%20%20%20%20%20%20%20self.stepId%2B%2B%3B%5Cn%20%20%20%20%20%20%20%20if%20(self.skipAll)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20self.skip()%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%7D)%3B%5Cn%5Cn%20%20%20%20%20%20afterEach(async%20function%20()%20%7B%5Cn%20%20%20%20%20%20%20%20let%20self%20%3D%20this%3B%5Cn%20%20%20%20%20%20%20%20let%20currentTest%20%3D%20self.currentTest%3B%5Cn%20%20%20%20%20%20%20%20let%20title%20%3D%20currentTest.title%3B%5Cn%20%20%20%20%20%20%20%20if%20(currentTest.state%20%3D%3D%3D%20'failed'%20%26%26%20%2F%5E(url%7CwaitBody%7CswitchWindow%7CswitchFrame)%3A%2F.test(title))%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20self.skipAll%20%3D%20true%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20if%20(!%2F%5E(closeWindow)%3A%2F.test(title))%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20let%20filepath%20%3D%20self.screenshotPath%20%2B%20'%2F'%20%2B%20self.caseName%20%2B%20'_'%20%2B%20self.stepId%3B%5Cn%20%20%20%20%20%20%20%20%20%20let%20driver%20%3D%20self.driver%3B%5Cn%20%20%20%20%20%20%20%20%20%20try%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20catch%20error%20when%20get%20alert%20msg%5Cn%20%20%20%20%20%20%20%20%20%20%20%20await%20driver.getScreenshot(filepath%20%2B%20'.png')%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20let%20url%20%3D%20await%20driver.url()%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20let%20html%20%3D%20await%20driver.source()%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20html%20%3D%20'%3C!--url%3A%20'%20%2B%20url%20%2B%20'%20--%3E%5C%5Cn'%20%2B%20html%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20fs.writeFileSync(filepath%20%2B%20'.html'%2C%20html)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20let%20cookies%20%3D%20await%20driver.cookies()%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20fs.writeFileSync(filepath%20%2B%20'.cookie'%2C%20JSON.stringify(cookies))%3B%5Cn%20%20%20%20%20%20%20%20%20%20%7D%20catch%20(e)%20%7B%7D%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%7D)%3B%5Cn%5Cn%20%20%20%20%20%20after(function%20()%20%7B%5Cn%20%20%20%20%20%20%20%20return%20this.driver.close()%3B%5Cn%20%20%20%20%20%20%7D)%3B%5Cn%5Cn%20%20%20%20%7D)%3B%5Cn%20%20%7D)%3B%5Cn%7D%5Cn%5Cnfunction%20getRootPath()%20%7B%5Cn%20%20let%20rootPath%20%3D%20path.resolve(__dirname)%3B%5Cn%20%20while%20(rootPath)%20%7B%5Cn%20%20%20%20if%20(fs.existsSync(rootPath%20%2B%20'%2Fconfig.json'))%20%7B%5Cn%20%20%20%20%20%20break%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20rootPath%20%3D%20rootPath.substring(0%2C%20rootPath.lastIndexOf(path.sep))%3B%5Cn%20%20%7D%5Cn%20%20return%20rootPath%3B%5Cn%7D%5Cn%5Cnfunction%20mkdirs(dirname)%20%7B%5Cn%20%20if%20(fs.existsSync(dirname))%20%7B%5Cn%20%20%20%20return%20true%3B%5Cn%20%20%7D%20else%20%7B%5Cn%20%20%20%20if%20(mkdirs(path.dirname(dirname)))%20%7B%5Cn%20%20%20%20%20%20fs.mkdirSync(dirname)%3B%5Cn%20%20%20%20%20%20return%20true%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%5Cn%5Cnfunction%20callSpec(name)%20%7B%5Cn%20%20try%20%7B%5Cn%20%20%20%20require(rootPath%20%2B%20'%2F'%20%2B%20name)()%3B%5Cn%20%20%7D%20catch%20(e)%20%7B%5Cn%20%20%20%20console.log(e)%5Cn%20%20%20%20process.exit(1)%3B%5Cn%20%20%7D%5Cn%7D%5Cn%5Cnfunction%20isPageError(code)%20%7B%5Cn%20%20return%20code%20%3D%3D%20''%20%7C%7C%20%2F%20jscontent%3D%5C%22errorCode%5C%22%20jstcache%3D%5C%22%5C%5Cd%2B%5C%22%7CdiagnoseConnectionAndRefresh%7Cdnserror_unavailable_header%7Cid%3D%5C%22reportCertificateErrorRetry%5C%22%7C400%20Bad%20Request%7C403%20Forbidden%7C404%20Not%20Found%7C500%20Internal%20Server%20Error%7C502%20Bad%20Gateway%7C503%20Service%20Temporarily%20Unavailable%7C504%20Gateway%20Time-out%2Fi.test(code)%3B%5Cn%7D%5Cn%5Cnfunction%20catchError(error)%20%7B%5Cn%5Cn%7D%5Cn%22%2C%22id%22%3A%22JfHmJ%22%7D\"></card><p><br /></p><p>主要配置在这里</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20sessionConfig%20%3D%20Object.assign(%7B%7D%2C%20webdriverConfig%2C%20%7B%5Cn%20%20'browserName'%3A%20browserName%2C%5Cn%20%20'version'%3A%20browserVersion%2C%5Cn%20%20'ie.ensureCleanSession'%3A%20true%2C%5Cn%20%20'chromeOptions'%3A%20%7B%5Cn%20%20%20%20'args'%3A%20%5B%5Cn%20%20%20%20%20%20'--headless'%2C%5Cn%20%20%20%20%20%20'--disable-dev-shm-usage'%2C%5Cn%20%20%20%20%20%20'--no-sandbox'%2C%5Cn%20%20%20%20%5D%5Cn%20%20%7D%5Cn%7D)%3B%22%2C%22id%22%3A%22Ox7hd%22%7D\"></card><p><br /></p><p>其他 chrome 配置信息可参见 <a href=\"https://peter.sh/experiments/chromium-command-line-switches/\" target=\"_blank\">https://peter.sh/experiments/chromium-command-line-switches/</a> </p>","public":1,"status":null,"likes_count":1,"comments_count":0,"content_updated_at":"2019-07-15T08:58:39.000Z","deleted_at":null,"created_at":"2019-07-15T08:58:26.000Z","updated_at":"2019-09-27T08:00:20.000Z","published_at":"2019-07-15T08:58:39.000Z","first_published_at":"2019-07-15T08:58:39.000Z","word_count":819,"cover":null,"description":"一、概述支持修改 uirecorder 默认模板，可以在模板里实现数据 mock，设置浏览器启动参数、设置钩子等。二、使用方式在初始化目录新建 template 目录，支持移动端模板和 PC 端模板定制。移动端录制模板jwebdriver-mobile.jsPC 端录制模板jwebdriver...","custom_description":null,"_serializer":"v2.doc_detail"}